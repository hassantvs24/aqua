/*
auto-generated by: https://github.com/react-spring/gltfjsx
author: DigitalLife3D (https://sketchfab.com/DigitalLife3D)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/model-61a-bottlenose-dolphin-2ec20f15b08c4c2fb16e4df5d837b893
title: Model 61A - Bottlenose Dolphin
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/scene.gltf')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      'Action.001': mixer.clipAction(animations[0], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <primitive object={nodes.GLTF_created_0_rootJoint} />
          <skinnedMesh
            material={materials.Dolphin_Body}
            geometry={nodes.mesh_0.geometry}
            skeleton={nodes.mesh_0.skeleton}
          />
          <skinnedMesh
            material={materials.Dolphin_Eyes}
            geometry={nodes.mesh_1.geometry}
            skeleton={nodes.mesh_1.skeleton}
          />
        </group>
      </group>
    </group>
  )
}
