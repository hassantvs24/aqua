/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/smolt-to-adult-physicaleye-54.gltf')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      animation_0: mixer.clipAction(animations[0], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[Math.PI, 0, Math.PI]}>
        <mesh
          material={materials['Egg Salmon']}
          geometry={nodes.SubD_Eye_Fix_Eye.geometry}
          name="SubD_Eye_Fix_Eye"
          morphTargetDictionary={nodes.SubD_Eye_Fix_Eye.morphTargetDictionary}
          morphTargetInfluences={nodes.SubD_Eye_Fix_Eye.morphTargetInfluences}
          rotation={[0, 0, 0]}
        />
        <mesh
          material={materials['Salmon Final Texture']}
          geometry={nodes.SubD_Eye_Fix_Body.geometry}
          name="SubD_Eye_Fix_Body"
          morphTargetDictionary={nodes.SubD_Eye_Fix_Body.morphTargetDictionary}
          morphTargetInfluences={nodes.SubD_Eye_Fix_Body.morphTargetInfluences}
          rotation={[0, 0, 0]}
        />
      </group>
    </group>
  )
}
