/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/Salmon-Egg-Fixed-Spec-Ver-2.gltf')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      Anim_0_Sphere: mixer.clipAction(animations[0], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-74.14, 11.92, -78.71]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          material={materials['Mat.9']}
          geometry={nodes.Sphere.geometry}
          position={[73.67, 78.7, 10.96]}
          rotation={[0.1, 0.62, 2.78]}
          scale={[0.9, 0.9, 0.9]}>
          <group position={[27.86, 105.82, -59.95]} rotation={[-0.14, 0.62, -2.74]} scale={[1.11, 1.11, 1.11]}>
            <mesh
              material={materials.Glass}
              geometry={nodes.Sphere001.geometry}
              position={[80.15, 76.62, 17.82]}
              rotation={[0.11, 0.62, 2.75]}
              scale={[1.02, 1.02, 1.02]}
            />
          </group>
        </mesh>
        <mesh
          material={materials['Mat.8']}
          geometry={nodes.Fish.geometry}
          position={[73.97, 78.72, 11.69]}
          rotation={[0.03, 0.52, 2.87]}
        />
      </group>
    </group>
  )
}
