/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef, useState, useEffect } from 'react'
import { useLoader, useFrame } from 'react-three-fiber'
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useLoader(GLTFLoader, '/smolt-to-adult-ver-14.glb')

  const actions = useRef()
  const [mixer] = useState(() => new THREE.AnimationMixer())
  useFrame((state, delta) => mixer.update(delta))
  useEffect(() => {
    actions.current = {
      Anim_0: mixer.clipAction(animations[0], group.current),
    }
    return () => animations.forEach((clip) => mixer.uncacheClip(clip))
  }, [])
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        material={materials['Salmon Final Texture']}
        geometry={nodes.Smolt.geometry}
        name="Smolt"
        morphTargetDictionary={nodes.Smolt.morphTargetDictionary}
        morphTargetInfluences={nodes.Smolt.morphTargetInfluences}
        rotation={[Math.PI, 0, Math.PI]}
      />
    </group>
  )
}
